# @package _global_
##
## Copyright 2021, Flyreel. All Rights Reserved.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ========================================================================##
run:
  batch_size_per_gpu: 8
data:
  train:
    supervised:
      collate_fn:
        _target_: sesemi.collation.RotationTransformer
        return_supervised_labels: True
    unsupervised:
      dataset:
        name: ${...supervised.dataset.name}
        subset: [train, val, unsup]
        image_transform:
          _target_: sesemi.transforms.train_transforms
          random_resized_crop: True
          resize: 256
          crop_dim: 224
          scale: [0.3, 1.0]
      shuffle: True
      pin_memory: True
      num_workers: 4
      drop_last: True
      collate_fn:
        _target_: sesemi.collation.RotationTransformer
        return_supervised_labels: False
learner:
  hparams:
    model:
      regularization_loss_heads:
        rotation_prediction:
          head:
            _target_: sesemi.models.heads.loss.RotationPredictionLossHead
            input_data: unsupervised
            input_backbone: backbone
          scheduler:
            _target_: sesemi.schedulers.weight.SigmoidRampupScheduler
            weight: 1.0
            stop_rampup: 0
          scale_factor: 1.0
        entropy_minimization:
          head:
            _target_: sesemi.models.heads.loss.EntropyMinimizationLossHead
            input_data: unsupervised
            input_backbone: backbone
            predict_fn: supervised
          scheduler:
            _target_: sesemi.schedulers.weight.SigmoidRampupScheduler
            weight: 1.0
            stop_rampup: 0
          scale_factor: 1.0